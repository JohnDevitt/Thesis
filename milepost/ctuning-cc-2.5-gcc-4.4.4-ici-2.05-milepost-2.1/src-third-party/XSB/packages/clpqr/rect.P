:- import {}/1 from clpr.

filled_rectangle(A, C) :-
	{ A >= 1 },
	distinct_squares(C),
	filled_zone([-1,A,1], _, C, []).
distinct_squares([]).
distinct_squares([B|C]) :-
	{ B > 0 },
	outof(C, B),
	distinct_squares(C).
outof([], _).
outof([B1|C], B) :-
	{ B =\= B1 }, % *** note disequation ***
	outof(C, B).
filled_zone([V|L], [W|L], C0, C0) :-
	{ V=W,V >= 0 }.
filled_zone([V|L], L3, [B|C], C2) :-
	{ V < 0 },
	placed_square(B, L, L1),
	filled_zone(L1, L2, C, C1),
	{ Vb=V+B },
filled_zone([Vb,B|L2], L3, C1, C2).
placed_square(B, [H,H0,H1|L], L1) :-
	{ B > H, H0=0, H2=H+H1 },
placed_square(B, [H2|L], L1).
placed_square(B, [B,V|L], [X|L]) :-
	{ X=V-B }.
placed_square(B, [H|L], [X,Y|L]) :-
	{ B < H, X= -B, Y=H-B }.


root(N, R) :-
root(N, 1, R).
root(0, S, R) :- !, S=R.
root(N, S, R) :-
	N1 is N-1,
	{ S1 = S/2 + 1/S },
	root(N1, S1, R).
