
name('Incremental Tree Builder').

authors(['Kurt Driessens, Jan Ramon']).

contact(['kurtd,janr@cs.kuleuven.ac.be']).

load_message('Loading TG-algorithm').

load_package(inc).

class(tg,[incremental_learned_theory],[],[method(update(Type,Examples,Values,InObject,OutObject),update_tg__M_tg(Examples,Values,InObject,OutObject),[virtual]),method(predict_value(Type,Example,Prediction,InObject,OutObject),predict_value_tg__M_tg(Example,Prediction,InObject,OutObject),[virtual]),method(show(Type,File,Object),show_tg__M_tg(File,Object),[virtual]),method(init(Type,Object),init_tg__M_tg(Object),[virtual]),method(destroy(Type,Object),destroy_tg__M_tg(Object),[virtual])]).

use_module('inc/tg/tg').

use_module('inc/tg/tg_learner').

classdef_module(tg_learner).

load_package(inc).

end_of_header.

setting(tg_min_sample_size,100,I,(integer(I)),'must be a positive integer').

setting(tg_leafdrift,100,I,(number(I), I > 0),'must be a number').

setting(tg_prop_opt,on,I,(member(I,[on,off])),'must be on or off').

setting(tg_mode,regression,I,(member(I,[regression])),'must be regression').

setting(tg_conv,off,T,(T = [_|_] ; T = off),'must be parameter list or off').

setting(tg_boost,1,I,(integer(I)),'must be a small positive integer').

setting(tg_boost_wait,1000,I,(integer(I)),'must be a positive integer').
