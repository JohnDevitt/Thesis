
name('ICL 4.3').

authors(['Wim Van Laer']).

contact(['Wim.VanLaer@cs.kuleuven.ac.be']).

load_message('Loading ICL version 4.3').

use_module('prediction/ICL/icl_main').

load_package('prediction').

load_package('statistics/exdistr_statistic').

classdef_module(icl_interface).

end_of_header.

command(icl,i,[],'icl -- i','Start the ICL induction proces for the first (positive) class.',icl_main_command,icl_main,[globalvars]).

setting(icl_multi,off,R,[on,off],'must be on or off').

setting(language,dnf,B,[cnf,dnf],'must be dnf or cnf').

setting(bias,dlab,B,[dlab,rmode],'must be dlab or rmode').

setting(maxhead,10,N,(integer(N), N >= 0),'must be a positive number').

setting(maxbody,10,N,(integer(N), N >= 0),'must be a positive number').

setting(types,off,R,[on,off],'must be on or off').

setting(modes,off,R,[on,off],'must be on or off').

setting(simplify,on,R,[on,off],'must be on or off').

setting(multi_prune,on,R,[on,off],'must be on or off').

setting(multi_test,bayes,R,[cn2,bayes,bayes_old],'must be either cn2, bayes or bayes_old').

setting(language_init,global,R,[global,local],'must be either local or global').

setting(icl_heuristic,m_estimate,X,[laplace,m_estimate,m_estimate(_)],'must be either laplace, m_estimate or m_estimate(M)').

setting(significance_level,0.90,R,[0.0,0,0.995,0.99,0.98,0.95,0.90,0.80],'must be either 0, 0.995, 0.99, 0.98, 0.95, 0.90, 0.80').

setting(min_coverage,1,N,(integer(N), N >= 1),'must be a strict positive number').

setting(min_accuracy,0.0,R,(number(R), R >= 0, R =< 1),'must be a positive real number =< 1').

setting(beam_size,5,N,(integer(N), N >= 1),'must be a strict positive number').

setting(tt_sets,1,S,(is_list(S) -> true ; integer(S), S > 0),'must be a list of set specifications or a positive number').

setting(cn2_mode,off,R,[on,off],'must be on or off').

setting(icl_heuristic_wra,no,R,[yes,no],'must be yes - for weighted relative accuracy - or no').

setting(transform,0,I,[0,1,2,-1],'must be 0, 1 or 2').

setting(beam_max_internal,1,V,(integer(V), V > 0),'must be an integer, >0').

package_hook(init_session,Arg,icl_init_session(Arg),icl_session).
