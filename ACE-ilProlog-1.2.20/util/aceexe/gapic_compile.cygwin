$src_dir    = win_to_unix($ENV{"SRC_DIR"});
$prolog_inc = win_to_unix($ENV{"PROLOG_INC"});
$prolog_lib = win_to_unix($ENV{"PROLOG_LIB"});

$ENV{"SRC_DIR"} = $src_dir;
$ENV{"PROLOG_INC"} = $prolog_inc;

$GCC = "g++";

$args = "";
$islink = 0;
for ($i = 0; $i <= $#ARGV; $i++) {
    $arg = $ARGV[$i];
    $arg =~ s/\.so/\.dll/;
    if ($arg =~ /\.dll/) {
        $islink = 1;
    }
    $arg = win_to_unix($arg);
    $args = $args . " " . $arg;
}
$args = $args . " -mno-cygwin -DUSESO -Dcygwin -DJREADLINE -DHAVE_BYTE -DGAPIC_OLD_GCC";
if ($islink == 1) {
    $args =~ s/-shared//g;
    $args =~ s/-Xlinker//g;
    $args =~ s/-soname//g;
    $args =~ s/-o//g;

    $nbdlls = 0;
    while ($args =~ /([^\s]+)\.dll/) {
        $dllname = $1;
        $dllname =~ /(.+)\/(.+)/;
        $dllpaths[$nbdlls] = $1;
        $dllnames[$nbdlls++] = $2;
        $args =~ s/[^\s]+\.dll//;
    }

    $dllpath = $dllpaths[0];
    $dllname = $dllnames[0];

    for ($i = 1; $i < $nbdlls; $i++) {
        $args = $args . " -l$dllnames[$i]";
    }

    $todo = "dllwrap --target=i386-mingw32 --output-lib=lib$dllname.a --dllname=$dllname.dll " .
            "--driver-name=$GCC $args -L$dllpath -L$prolog_lib -lacekernel";
    print "$todo\n";

    system($todo);
    system("mv lib$dllname.a $dllpath 2>/dev/null");
    system("mv $dllname.dll $dllpath 2>/dev/null");
} else {
    print "GCC $args\n";
    $val = system("$GCC $args");
    exit($val);
}

sub win_to_unix {
    my ($win) = @_;
    $win =~ s/^([a-zA-Z])\:/\/cygdrive\/$1/;
    $win =~ s/\\/\//g;
    return $win;
}
