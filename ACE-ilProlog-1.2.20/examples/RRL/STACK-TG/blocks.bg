:-['blocks.env'].


get_model(
        tgmodel(_,saPair(State,move(X,Y)),_),
        State,X,Y).

%clear(state,block)
clear(blocks(Clear,_,_,_),Block):-
	member(clear(Block),Clear).

%on(state,block,block)
on(blocks(_,On,_,_),X,Y):-
	member(on(X,Y),On).

%eq(block,block)
eq(X,X).

%above(state,block,block)
above(blocks(_,On,_,_),X,Y):-
	member(on(X,Y),On).
above(blocks(_,On,_,_),X,Y):-
	member(on(X,Z),On),
	above(blocks(_,On,_,_),Z,Y).

%height(state,block,number)
height(_,floor,0).
height(blocks(_,On,_,_),A,H) :-
	block(On,A), height1(On,A,H).
height1(On,A,1) :-
	member(on(A,floor),On).
height1(On,A,H) :-
	member(on(A,B),On),
	B \= floor,
	height1(On,B,HB),
	H is HB+1.

%numberofblocks(state,number)
numberofblocks(blocks(_,On,_,_),L):-
	length(On,L).

%numberofstacks(state,number)
numberofstacks(blocks(_,On,_,_),S):-
	findall(X,member(on(X,floor),On),List),
	length(List,S).

%diff(number,number,number)
%conflict
diff_number(X,Y,Z) :- Z is X - Y.

%goal_on(state,block,block)
goal_on(blocks(_,_,on(X,Y),_),X,Y).
%goal_stack(state)
goal_stack(blocks(_,_,stack,_)).
%goal_unstack(state)
goal_unstack(blocks(_,_,unstack,_)).
%goal_clear(state,block)
goal_clear(blocks(_,_,clear(X),_),X).

block(On,X):-
	member(on(X,_),On).
